<?xml version="1.0"?>
<!--
    An XSL style sheet for presenting OpenMath Symbols used in the 
    OpenMath Document (OMDoc) integer1-omdoc.omdoc.
  
    This XSL style file is automatically generated from an OMDoc document, do not edit!
  -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:exsl="http://exslt.org/common" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:om="http://www.openmath.org/OpenMath" xmlns:omdoc="http://www.mathweb.org/omdoc" version="1.0" exsl:dummy="to get the namespace right" xlink:dummy="to get the namespace right" om:dummy="to get the namespace right" omdoc:dummy="to get the namespace right" extension-element-prefixes="exsl">

<xsl:template match="om:OMA[not(@xref) and om:OMS[position()=1 and @name='factorof' and @cd='integer1' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'factorof'"/><xsl:choose><xsl:when test="$format='pmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="700"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><!--for some reason a comment here helps, don't ask me why--><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[2]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="700"/></xsl:apply-templates></xsl:with-param></xsl:call-template><xsl:call-template name="print-symbol"><xsl:with-param name="print-form">|</xsl:with-param><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'factorof',$crossref-format)"/><xsl:with-param name="id" select="concat('MCR',$prefix,generate-id(*[1]))"/></xsl:call-template><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[3]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="700"/></xsl:apply-templates></xsl:with-param></xsl:call-template></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="700"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><!--for some reason a comment here helps, don't ask me why--><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[2]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="700"/></xsl:apply-templates></xsl:with-param></xsl:call-template><xsl:call-template name="print-symbol"><xsl:with-param name="print-form">|</xsl:with-param><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'factorof',$crossref-format)"/><xsl:with-param name="id" select="concat('MCR',$prefix,generate-id(*[1]))"/></xsl:call-template><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[3]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="700"/></xsl:apply-templates></xsl:with-param></xsl:call-template></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:otherwise></xsl:choose></xsl:template>

<xsl:template match="om:OMS[@name='factorof' and @cd='integer1' and not(@style)]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'factorof'"/><xsl:choose><xsl:when test="$format='cmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><xsl:element name="factorof" namespace="{$TargetNS}"><xsl:attribute name="id"><xsl:value-of select="concat('MCR',$prefix,generate-id())"/></xsl:attribute><xsl:call-template name="make-group"><xsl:with-param name="content"/><xsl:with-param name="parent-element">factorof</xsl:with-param></xsl:call-template></xsl:element></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:apply-templates select="." mode="fallback"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template>

<xsl:template match="om:OMA[not(@xref) and om:OMS[position()=1 and @name='factorial' and @cd='integer1' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'factorial'"/><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="make-group"><xsl:with-param name="content"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="100"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><xsl:for-each select="*[position()!=1]"><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="."><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="100"/></xsl:apply-templates></xsl:with-param></xsl:call-template><xsl:if test="position()!=last()"><xsl:call-template name="print-separator"><xsl:with-param name="print-form" select="','"/><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'factorial',$crossref-format)"/></xsl:call-template></xsl:if></xsl:for-each></xsl:with-param></xsl:call-template><xsl:call-template name="print-symbol"><xsl:with-param name="print-form">!</xsl:with-param><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'factorial',$crossref-format)"/><xsl:with-param name="id" select="concat('MCR',$prefix,generate-id(*[1]))"/></xsl:call-template></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:template>

<xsl:template match="om:OMS[@name='factorial' and @cd='integer1' and not(@style)]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'factorial'"/><xsl:choose><xsl:when test="$format='cmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><xsl:element name="factorial" namespace="{$TargetNS}"><xsl:attribute name="id"><xsl:value-of select="concat('MCR',$prefix,generate-id())"/></xsl:attribute><xsl:call-template name="make-group"><xsl:with-param name="content"/><xsl:with-param name="parent-element">factorial</xsl:with-param></xsl:call-template></xsl:element></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:apply-templates select="." mode="fallback"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template>

<xsl:template match="om:OMA[not(@xref) and om:OMS[position()=1 and @name='quotient' and @cd='integer1' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'quotient'"/><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><!--for some reason a comment here helps, don't ask me why--><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[2]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="1000"/></xsl:apply-templates></xsl:with-param></xsl:call-template><xsl:call-template name="print-symbol"><xsl:with-param name="print-form">div</xsl:with-param><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'quotient',$crossref-format)"/><xsl:with-param name="id" select="concat('MCR',$prefix,generate-id(*[1]))"/></xsl:call-template><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[3]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="1000"/></xsl:apply-templates></xsl:with-param></xsl:call-template></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:template>

<xsl:template match="om:OMS[@name='quotient' and @cd='integer1' and not(@style)]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'quotient'"/><xsl:choose><xsl:when test="$format='cmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><xsl:element name="quotient" namespace="{$TargetNS}"><xsl:attribute name="id"><xsl:value-of select="concat('MCR',$prefix,generate-id())"/></xsl:attribute><xsl:call-template name="make-group"><xsl:with-param name="content"/><xsl:with-param name="parent-element">quotient</xsl:with-param></xsl:call-template></xsl:element></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:apply-templates select="." mode="fallback"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template>

<xsl:template match="om:OMA[not(@xref) and om:OMS[position()=1 and @name='remainder' and @cd='integer1' and not(@style)]]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'remainder'"/><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><!--for some reason a comment here helps, don't ask me why--><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[2]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="1000"/></xsl:apply-templates></xsl:with-param></xsl:call-template><xsl:call-template name="print-symbol"><xsl:with-param name="print-form">mod</xsl:with-param><xsl:with-param name="crossref-symbol" select="'yes'"/><xsl:with-param name="uri" select="omdoc:crossref($omdoc,'remainder',$crossref-format)"/><xsl:with-param name="id" select="concat('MCR',$prefix,generate-id(*[1]))"/></xsl:call-template><xsl:call-template name="do-arg"><xsl:with-param name="content"><xsl:apply-templates select="*[3]"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="1000"/></xsl:apply-templates></xsl:with-param></xsl:call-template></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:template>

<xsl:template match="om:OMS[@name='remainder' and @cd='integer1' and not(@style)]" priority="1"><xsl:param name="prec" select="1000"/><xsl:param name="prefix"/><xsl:variable name="theory"><xsl:choose><xsl:when test="ancestor::omdoc:theory[1]/@xml:id"><xsl:value-of select="ancestor::omdoc:theory[1]/@xml:id"/></xsl:when><xsl:when test="ancestor::*[@theory]"><xsl:value-of select="substring-after(ancestor::*[@theory][1]/@theory, '#')"/></xsl:when><xsl:otherwise><xsl:value-of select="''"/></xsl:otherwise></xsl:choose></xsl:variable><xsl:variable name="omdoc" select="string($href-cat/catalogue[@for=concat('#',$theory)]/loc[@theory='integer1']/@omdoc)"/><xsl:variable name="name" select="'remainder'"/><xsl:choose><xsl:when test="$format='cmml'"><xsl:variable name="valid-lang" select="omdoc:comp-valid-language('en',$TargetLanguage)"/><xsl:choose><xsl:when test="$valid-lang='en'"><xsl:call-template name="with-arg-group"><xsl:with-param name="prefix" select="$prefix"/><xsl:with-param name="prec" select="$prec"/><xsl:with-param name="precedence" select="1000"/><xsl:with-param name="open">(</xsl:with-param><xsl:with-param name="close">)</xsl:with-param><xsl:with-param name="content"><xsl:element name="remainder" namespace="{$TargetNS}"><xsl:attribute name="id"><xsl:value-of select="concat('MCR',$prefix,generate-id())"/></xsl:attribute><xsl:call-template name="make-group"><xsl:with-param name="content"/><xsl:with-param name="parent-element">remainder</xsl:with-param></xsl:call-template></xsl:element></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise/></xsl:choose></xsl:when><xsl:otherwise><xsl:apply-templates select="." mode="fallback"><xsl:with-param name="prefix" select="$prefix"/></xsl:apply-templates></xsl:otherwise></xsl:choose></xsl:template>

</xsl:stylesheet>
