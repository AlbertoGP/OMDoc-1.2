<?xml version="1.0" ?>
<!DOCTYPE omdoc PUBLIC "-//OMDoc//DTD OMDoc V1.1//EN"
                 "../../dtd/omdoc.dtd" []>

<!-- Document Automatically Generated by TPS3 by kohlhase -->
<!-- on Tuesday, July  2, 2002 at 10:41:15. -->
<omdoc xmlns:dc="http://purl.org/dc/elements/1.1/"  xmlns="http://www.mathweb.org/omdoc"
xml:id="tps.AXIOMOFDESCR.omdoc" >
<metadata>
<dc:title>tps.AXIOMOFDESCR</dc:title>
<dc:date>2002-07-02T10:41:15</dc:date>
<dc:creator role="aut">The TPS Project</dc:creator>
<dc:creator role="trc">kohlhase</dc:creator>
<dc:format>application/omdoc+xml</dc:format>
<dc:type>Dataset</dc:type>
<dc:source>The TPS library: http://gtps.math.cmu.edu/tps.html</dc:source>
<dc:rights>The formalization can be freely distributed, maintaining reference to the TPS source.</dc:rights>
</metadata>
<theory xml:id="tps.AXIOMOFDESCR">

<symbol name="tps.obj.COND">
<metadata>
<dc:description>
No more help available.  Sorry.
LAMBDA x(C) LAMBDA y(C) LAMBDA p(O) THAT q(C).p AND x = q OR ~p AND y = q
Type variables are: ("C")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="C"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="C"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMS cd="truthval" name="bool"/>
    <OMV name="C"/>
   </OMA>
   </OMA>
   </OMA>
</OMOBJ></type></symbol>
<definition for="#tps.obj.COND" xml:id="abbr.COND.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="C"/></OMBVAR><OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="C"/>
  </OMATP>
<OMV name="x"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="C"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMS cd="truthval" name="bool"/>
  </OMATP>
<OMV name="p"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="sthold" name="descr-op"/> <OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="C"/>
  </OMATP>
<OMV name="q"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="or"/> <OMA><OMS cd="pl0" name="and"/> <OMV name="p"/>
 <OMA><OMS cd="sthol" name="eq"/> <OMV name="x"/>
 <OMV name="q"/>
 </OMA> </OMA> <OMA><OMS cd="pl0" name="and"/> <OMA><OMS cd="pl0" name="not"/> <OMV name="p"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="y"/>
 <OMV name="q"/>
 </OMA> </OMA> </OMA></OMBIND> </OMA></OMBIND></OMBIND></OMOBJ></FMP></definition>
<assertion xml:id="gwff.DESCR" type="conjecture">
<CMP>
No more help available.  Sorry.
</CMP>
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMA><OMS cd="sthol" name="eq"/> <OMA><OMS cd="sthold" name="descr-op"/> <OMA><OMS cd="sthol" name="eq"/> <OMV name="Y"/>
 </OMA> </OMA> <OMV name="Y"/>
 </OMA></OMOBJ></FMP></assertion>
<assertion xml:id="gwff.DESCR-CHURCH" type="conjecture">
<CMP>
Church's statement of the Axiom of dc:descriptions
F(OA) X(A) IMPLIES.FORALL Y(A) [F Y IMPLIES X = Y] IMPLIES F.J(A(OA)) F
</CMP>
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/></OMBVAR><OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="F"/>
 <OMV name="X"/>
 </OMA> <OMA><OMS cd="pl0" name="implies"/> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="Y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="F"/>
 <OMV name="Y"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="X"/>
 <OMV name="Y"/>
 </OMA> </OMA></OMBIND> <OMA><OMV name="F"/>
 <OMA><OMV name="J"/>
 <OMV name="F"/>
 </OMA> </OMA> </OMA> </OMA></OMBIND></OMOBJ></FMP></assertion>
<symbol name="tps.obj.DESCR-CHURCH1">
<metadata>
<dc:description>
Axiom of dc:descriptions (9) as in Church's 1940 JSL paper,
but with quantifiers added.
EXISTS j(A(OA)) FORALL f(OA) FORALL x(A).f x IMPLIES.FORALL y(A) [f y IMPLIES x = y] IMPLIES f.j f
Type variables are: ("A")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">    <OMS cd="truthval" name="bool"/>
</OMOBJ></type></symbol>
<definition for="#tps.obj.DESCR-CHURCH1" xml:id="abbr.DESCR-CHURCH1.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/></OMBVAR><OMBIND><OMS cd="sthol" name="exists"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
    <OMV name="A"/>
   </OMA>
  </OMATP>
<OMV name="j"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
  </OMATP>
<OMV name="f"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="x"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="f"/>
 <OMV name="x"/>
 </OMA> <OMA><OMS cd="pl0" name="implies"/> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="f"/>
 <OMV name="y"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="x"/>
 <OMV name="y"/>
 </OMA> </OMA></OMBIND> <OMA><OMV name="f"/>
 <OMA><OMV name="j"/>
 <OMV name="f"/>
 </OMA> </OMA> </OMA> </OMA></OMBIND></OMBIND></OMBIND></OMOBJ></FMP></definition>
<symbol name="tps.obj.DESCR-CHURCH1T">
<metadata>
<dc:description>
Axiom of dc:descriptions (9) as in Church's 1940 JSL paper,
but with quantifiers added,
and a dummy variable to identify the type.
Use DESCR-CHURCH1T T(A) as an axiom of descriptions at type A.
LAMBDA t(A) EXISTS j(A(OA)) FORALL f(OA) FORALL x(A).f x IMPLIES.FORALL y(A) [f y IMPLIES x = y] IMPLIES f.j f
Type variables are: ("A")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
</OMOBJ></type></symbol>
<definition for="#tps.obj.DESCR-CHURCH1T" xml:id="abbr.DESCR-CHURCH1T.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/></OMBVAR><OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="t"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="exists"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
    <OMV name="A"/>
   </OMA>
  </OMATP>
<OMV name="j"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
  </OMATP>
<OMV name="f"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="x"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="f"/>
 <OMV name="x"/>
 </OMA> <OMA><OMS cd="pl0" name="implies"/> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="f"/>
 <OMV name="y"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="x"/>
 <OMV name="y"/>
 </OMA> </OMA></OMBIND> <OMA><OMV name="f"/>
 <OMA><OMV name="j"/>
 <OMV name="f"/>
 </OMA> </OMA> </OMA> </OMA></OMBIND></OMBIND></OMBIND></OMBIND></OMOBJ></FMP></definition>
<symbol name="tps.obj.FEQCL">
<metadata>
<dc:description>
lifts f(AB) to a function (A(OB)) on equiv classes induced by f
LAMBDA f(AB) LAMBDA x(OB) IOTA.LAMBDA z(A) EXISTS y(B).x y AND f y = z
Type variables are: ("A" "B")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="B"/>
    <OMV name="A"/>
   </OMA>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="B"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
    <OMV name="A"/>
   </OMA>
   </OMA>
</OMOBJ></type></symbol>
<definition for="#tps.obj.FEQCL" xml:id="abbr.FEQCL.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/> <OMV name="B"/></OMBVAR><OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="B"/>
    <OMV name="A"/>
   </OMA>
  </OMATP>
<OMV name="f"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="B"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
  </OMATP>
<OMV name="x"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="sthold" name="descr-op"/> <OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="z"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="exists"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="B"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="and"/> <OMA><OMV name="x"/>
 <OMV name="y"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMA><OMV name="f"/>
 <OMV name="y"/>
 </OMA> <OMV name="z"/>
 </OMA> </OMA></OMBIND></OMBIND> </OMA></OMBIND></OMBIND></OMOBJ></FMP></definition>
<symbol name="tps.obj.REC1">
<metadata>
<dc:description>
General recursion operator; successor 
and zero are made explicit arguments.
LAMBDA S(HH) LAMBDA O(H) LAMBDA h(AAH) LAMBDA g(A) LAMBDA n(H) THAT m(A) FORALL w(OAH).w O g AND FORALL x(H) FORALL y(A) [w x y IMPLIES w [S x].h x y] IMPLIES w n m
Type variables are: ("A" "H")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
    <OMV name="H"/>
   </OMA>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
   </OMA>
   </OMA>
   </OMA>
</OMOBJ></type></symbol>
<definition for="#tps.obj.REC1" xml:id="abbr.REC1.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/> <OMV name="H"/></OMBVAR><OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
    <OMV name="H"/>
   </OMA>
  </OMATP>
<OMV name="S"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="H"/>
  </OMATP>
<OMV name="O"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
  </OMATP>
<OMV name="h"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="g"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="H"/>
  </OMATP>
<OMV name="n"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="sthold" name="descr-op"/> <OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="m"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
   </OMA>
  </OMATP>
<OMV name="w"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMS cd="pl0" name="and"/> <OMA><OMV name="w"/>
 <OMV name="O"/>
 <OMV name="g"/>
 </OMA> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="H"/>
  </OMATP>
<OMV name="x"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="w"/>
 <OMV name="x"/>
 <OMV name="y"/>
 </OMA> <OMA><OMV name="w"/>
 <OMA><OMV name="S"/>
 <OMV name="x"/>
 </OMA> <OMA><OMV name="h"/>
 <OMV name="x"/>
 <OMV name="y"/>
 </OMA> </OMA> </OMA></OMBIND> </OMA> <OMA><OMV name="w"/>
 <OMV name="n"/>
 <OMV name="m"/>
 </OMA> </OMA></OMBIND></OMBIND> </OMA></OMBIND></OMBIND></OMOBJ></FMP></definition>
<symbol name="tps.obj.REC2">
<metadata>
<dc:description>
Recursion operator; contains
S and O as free variables; see REC1.
LAMBDA h(AAH) LAMBDA g(A) LAMBDA n(H) THAT m(A) FORALL w(OAH).w O(H) g AND FORALL x(H) FORALL y(A) [w x y IMPLIES w [S(HH) x].h x y] IMPLIES w n m
Type variables are: ("A" "H")
</dc:description></metadata>
<type system="simpletypes"><OMOBJ xmlns="http://www.openmath.org/OpenMath">  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
   </OMA>
</OMOBJ></type></symbol>
<definition for="#tps.obj.REC2" xml:id="abbr.REC2.def" type="simple">
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/> <OMV name="H"/></OMBVAR><OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMV name="A"/>
   </OMA>
   </OMA>
  </OMATP>
<OMV name="h"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="g"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="H"/>
  </OMATP>
<OMV name="n"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="sthold" name="descr-op"/> <OMBIND><OMS cd="lambda-calc" name="lambda"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="m"/>
</OMATTR>

 </OMBVAR>
 <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="H"/>
  <OMA>
   <OMS cd="simpletypes" name="funtype"/>
    <OMV name="A"/>
    <OMS cd="truthval" name="bool"/>
   </OMA>
   </OMA>
  </OMATP>
<OMV name="w"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMS cd="pl0" name="and"/> <OMA><OMV name="w"/>
 <OMV name="O"/>
 <OMV name="g"/>
 </OMA> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="H"/>
  </OMATP>
<OMV name="x"/>
</OMATTR>

   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="y"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="implies"/> <OMA><OMV name="w"/>
 <OMV name="x"/>
 <OMV name="y"/>
 </OMA> <OMA><OMV name="w"/>
 <OMA><OMV name="S"/>
 <OMV name="x"/>
 </OMA> <OMA><OMV name="h"/>
 <OMV name="x"/>
 <OMV name="y"/>
 </OMA> </OMA> </OMA></OMBIND> </OMA> <OMA><OMV name="w"/>
 <OMV name="n"/>
 <OMV name="m"/>
 </OMA> </OMA></OMBIND></OMBIND> </OMA></OMBIND></OMBIND></OMOBJ></FMP></definition>
<assertion xml:id="gwff.T5310" type="conjecture">
<CMP>
No more help available.  Sorry.
</CMP>
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/></OMBVAR><OMA><OMS cd="pl0" name="implies"/> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="z"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="equivalent"/> <OMA><OMV name="p"/>
 <OMV name="z"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="y"/>
 <OMV name="z"/>
 </OMA> </OMA></OMBIND> <OMA><OMS cd="sthol" name="eq"/> <OMA><OMS cd="sthold" name="descr-op"/> <OMV name="p"/>
 </OMA> <OMV name="y"/>
 </OMA> </OMA></OMBIND></OMOBJ></FMP></assertion>
<assertion xml:id="gwff.T5310A" type="conjecture">
<CMP>
No more help available.  Sorry.
</CMP>
<FMP><OMOBJ xmlns="http://www.openmath.org/OpenMath"><OMBIND><OMS cd="simpletypes" name="all-types"/><OMBVAR> <OMV name="A"/></OMBVAR><OMA><OMS cd="pl0" name="implies"/> <OMBIND><OMS cd="sthol" name="forall"/>
 <OMBVAR>
   <OMATTR>
  <OMATP>
   <OMS cd="simpletypes" name="type"/>
    <OMV name="A"/>
  </OMATP>
<OMV name="z"/>
</OMATTR>

 </OMBVAR>
 <OMA><OMS cd="pl0" name="equivalent"/> <OMA><OMV name="p"/>
 <OMV name="z"/>
 </OMA> <OMA><OMS cd="sthol" name="eq"/> <OMV name="z"/>
 <OMV name="y"/>
 </OMA> </OMA></OMBIND> <OMA><OMS cd="sthol" name="eq"/> <OMA><OMS cd="sthold" name="descr-op"/> <OMV name="p"/>
 </OMA> <OMV name="y"/>
 </OMA> </OMA></OMBIND></OMOBJ></FMP></assertion>
</theory>
</omdoc>
